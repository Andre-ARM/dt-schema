# SPDX-License-Identifier: BSD-2-Clause
# Copyright 2018 Linaro Ltd.
# Copyright 2018 Arm Ltd.
%YAML 1.2
---
$id: "http://devicetree.org/meta-schemas/core.yaml#"
$schema: "http://json-schema.org/draft-06/schema#"
description: "Metaschema for devicetree binding documentation"

allOf: [ { $ref: "http://json-schema.org/draft-06/schema#" } ]

definitions:
  all-properties:
    allOf:
      - $ref: "#definitions/core-properties"
      - $ref: "clocks.yaml#"
      - $ref: "gpios.yaml#"
      - $ref: "interrupts.yaml#"
      - $ref: "reset.yaml#"
      - $ref: "mailbox.yaml#"
  core-properties:
    properties:
      reg:
        $ref: "cell.yaml#array"
      compatible:
        $ref: "string-array.yaml"
    patternProperties:
      '^[a-zA-Z0-9].*,.*$':
        type: object
        properties:
          description:
            type: string
        required:
          - description

      '.*-names$':
        $ref: "string-array.yaml"

      '^#.*-cells$':
        $ref: "cell.yaml#single"

      '^.*$':
        properties:
          properties:
            $ref: "#/definitions/all-properties"
        propertyNames:
          enum:
            - $ref
            - additionalItems
            - allOf
            - const
            - contains
            - default
            - dependencies
            - description
            - enum
            - items
            - minItems
            - minimum
            - maxItems
            - maximum
            - oneOf
            - patternProperties
            - properties
            - required
            - type
            - typeSize

properties:
  # listing all properties here to narrow the scope of what is allowed in
  # devicetree schema files. This list can be relaxed in the future as we
  # become more comfortable with the validation vocabulary.
  # Also, being explicit about what properties are allowed helps to catch
  # misspelled or unsupported tests.
  $id:
    pattern: 'http://devicetree.org/(test/)?schemas/.*\.yaml#'
  $schema:
    const: "http://devicetree.org/meta-schemas/core.yaml#"
  title: true
  description: true
  examples: true
  required: true
  allOf: true
  definitions: true
  additionalProperties: true
  dependencies: true
  historical: true

  maintainers:
    type: array
    items:
      type: string
      format: email

  patternProperties:
    $ref: "#definitions/all-properties"
  properties:
    $ref: "#definitions/all-properties"

  select: { $ref: "http://json-schema.org/draft-06/schema#" }

required:
  - $id
  - $schema
  - title
  - maintainers

additionalProperties: false
